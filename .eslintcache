[{"/Users/stevengong/temp/hackernews-graphql-client/src/components/App.js":"1","/Users/stevengong/temp/hackernews-graphql-client/src/components/Link.js":"2","/Users/stevengong/temp/hackernews-graphql-client/src/components/LinkList.js":"3","/Users/stevengong/temp/hackernews-graphql-client/src/index.js":"4","/Users/stevengong/temp/hackernews-graphql-client/src/components/Notification.js":"5","/Users/stevengong/temp/hackernews-graphql-client/src/components/SignUp.js":"6","/Users/stevengong/temp/hackernews-graphql-client/src/components/Login.js":"7","/Users/stevengong/temp/hackernews-graphql-client/src/components/Home.js":"8"},{"size":421,"mtime":1610701855564,"results":"9","hashOfConfig":"10"},{"size":234,"mtime":1609639618568,"results":"11","hashOfConfig":"10"},{"size":1484,"mtime":1610068780392,"results":"12","hashOfConfig":"10"},{"size":1545,"mtime":1610795708002,"results":"13","hashOfConfig":"10"},{"size":1024,"mtime":1610065467550,"results":"14","hashOfConfig":"10"},{"size":1790,"mtime":1610702490525,"results":"15","hashOfConfig":"10"},{"size":1582,"mtime":1610702533264,"results":"16","hashOfConfig":"10"},{"size":212,"mtime":1610702663204,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"ufxw2g",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"/Users/stevengong/temp/hackernews-graphql-client/src/components/App.js",["43"],"import { Switch, Route, Redirect } from 'react-router-dom';\nimport './../styles/App.css';\n\nimport SignUp from './SignUp';\nimport Login from './Login';\nimport Home from './Home';\n\nfunction App() {\n  return (\n\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/signup\" component={SignUp} />\n      <Route exact path=\"/login\" component={Login} />\n    </Switch>\n  );\n}\n\nexport default App;\n",["44","45"],"/Users/stevengong/temp/hackernews-graphql-client/src/components/Link.js",[],"/Users/stevengong/temp/hackernews-graphql-client/src/components/LinkList.js",[],["46","47"],"/Users/stevengong/temp/hackernews-graphql-client/src/index.js",["48","49","50"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { useQuery, gql } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport './styles/index.css';\nimport App from './components/App';\n\nimport { split } from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\n\n// 1\nimport {\n  ApolloProvider,\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache\n} from '@apollo/client';\n\nconst token = localStorage.getItem('AUTH_TOKEN') || \"random token hardcoded\";\nconst customFetch = (uri, options) => {\n  console.log(`token: ${token}`)\n  options.headers.authorization = token;\n  return fetch(uri, options);\n};\n\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:4000/graphql`,\n  fetch: customFetch,\n  options: {\n    reconnect: true,\n    connectionParams: {\n      authorization: token\n    },\n  }\n});\n\n\n// 2\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000',\n  fetch: customFetch\n});\n\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return (\n      kind === 'OperationDefinition' &&\n      operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink\n);\n\n\n// 3\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n});\n\n// 4\nReactDOM.render(\n  < BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);","/Users/stevengong/temp/hackernews-graphql-client/src/components/Notification.js",[],"/Users/stevengong/temp/hackernews-graphql-client/src/components/SignUp.js",["51"],"import React, { useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router-dom'\n\nconst SIGN_UP = gql`\n  mutation Signup($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name){\n        token\n        user{\n            name\n            email\n            id\n        }\n    }\n}\n`;\n\nexport default () => {\n    const [details, setDetails] = useState({ email: '', password: '', name: '' });\n    const [signup, { loading: mutationLoading, error: mutationError, data },] = useMutation(SIGN_UP);\n    const { email, password, name } = details;\n\n    const setName = (updatedProp) => {\n        const newState = { ...details, ...updatedProp };\n        setDetails(newState);\n    }\n\n    if (mutationLoading) return <p>Loading...</p>;\n    if (mutationError) return <p>Error :(</p>;\n    if (data) {\n        localStorage.setItem(\"AUTH_TOKEN\", data.token);\n        return <Redirect to=\"/\" />\n    };\n\n    const signupNewUser = (e) => {\n        e.preventDefault();\n        signup({ variables: { email, password, name } });\n    }\n\n    return (\n        <>\n            <h1>Sign up</h1>\n            <form onSubmit={signupNewUser}>\n                <input type=\"text\" value={name} placeholder=\"Your name\"\n                    onChange={e => setName({ name: e.target.value })} required />\n                <input type=\"email\" value={email} placeholder=\"Your email\"\n                    onChange={e => setName({ email: e.target.value })} required />\n                <input type=\"password\" value={password} placeholder=\"Choose a safe password\"\n                    onChange={e => setName({ password: e.target.value })} required />\n                <input type=\"submit\" />\n            </form>\n        </>\n    )\n\n}","/Users/stevengong/temp/hackernews-graphql-client/src/components/Login.js",["52"],"import React, { useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router-dom'\n\nconst LOGIN = gql`\n  mutation Signup($email: String!, $password: String!) {\n    login(email: $email, password: $password){\n        token\n        user{\n            name\n            email\n            id\n        }\n    }\n}\n`;\n\nexport default () => {\n    const [details, setDetails] = useState({ email: '', password: '' });\n    const [login, { loading: mutationLoading, error: mutationError, data }] = useMutation(LOGIN, { errorPolicy: 'all' });\n    const { email, password } = details;\n\n    const setName = (updatedProp) => {\n        const newState = { ...details, ...updatedProp };\n        setDetails(newState);\n    }\n\n    if (mutationLoading) return <p>Loading...</p>;\n    if (mutationError) return <p>Error :(</p>;\n    if (data) {\n        localStorage.setItem(\"AUTH_TOKEN\", data.token);\n        return <Redirect to=\"/\" />;\n    }\n\n    const loginUser = (e) => {\n        e.preventDefault();\n        login({ variables: { email, password } });\n    }\n\n    return (\n        <>\n            <h1>Login</h1>\n            <form onSubmit={loginUser}>\n                <input type=\"email\" value={email} placeholder=\"Your email\"\n                    onChange={e => setName({ email: e.target.value })} required />\n                <input type=\"password\" value={password} placeholder=\"Your password\"\n                    onChange={e => setName({ password: e.target.value })} required />\n                <input type=\"submit\" />\n            </form>\n        </>\n    )\n\n}",["53","54"],"/Users/stevengong/temp/hackernews-graphql-client/src/components/Home.js",["55"],"import LinkList from './LinkList';\nimport Notification from './Notification';\n\nconst authToken = localStorage.getItem(\"AUTH_TOKEN\");\n\nexport default () => authToken && <>\n    <LinkList />\n    <Notification />\n</>",["56","57"],{"ruleId":"58","severity":1,"message":"59","line":1,"column":25,"nodeType":"60","messageId":"61","endLine":1,"endColumn":33},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"58","severity":1,"message":"68","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":18},{"ruleId":"58","severity":1,"message":"69","line":4,"column":20,"nodeType":"60","messageId":"61","endLine":4,"endColumn":23},{"ruleId":"58","severity":1,"message":"70","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":18,"column":1,"nodeType":"73","endLine":55,"endColumn":2},{"ruleId":"71","severity":1,"message":"72","line":18,"column":1,"nodeType":"73","endLine":53,"endColumn":2},{"ruleId":"62","replacedBy":"74"},{"ruleId":"64","replacedBy":"75"},{"ruleId":"71","severity":1,"message":"72","line":6,"column":1,"nodeType":"73","endLine":9,"endColumn":4},{"ruleId":"62","replacedBy":"76"},{"ruleId":"64","replacedBy":"77"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["78"],"no-negated-in-lhs",["79"],["78"],["79"],"'useQuery' is defined but never used.","'gql' is defined but never used.","'setContext' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["78"],["79"],["78"],["79"],"no-global-assign","no-unsafe-negation"]